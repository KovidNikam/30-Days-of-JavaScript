/**
 * @param {Array<Function>} functions
 * @return {Promise<any>}
 */
var promiseAll = function (functions) {
    return new Promise((resolve, reject) => {
        let res = new Array(functions.length);
        let waitingFor = functions.length;
        if (waitingFor === 0) resolve(res); 
        functions.forEach((fn, i) => {
            fn()
                .then((result) => {
                    res[i] = result;
                    waitingFor--;
                    if (waitingFor === 0) resolve(res);
                }).catch(reject);
        });
    });
};

/**
 * const promise = promiseAll([() => new Promise(res => res(42))])
 * promise.then(console.log); // [42]
 */
